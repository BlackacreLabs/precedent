require File.dirname(__FILE__) + '/inline'

module Precedent
  grammar Paragraph
    include Inline

    rule paragraph
      horizontal_rule /
      ragged_left /
      quote /
      footnote /
      indented /
      flush
    end

    rule horizontal_rule
      '* * *' "\n"
      {
        def build
          { :type => :rule }
        end
      }
    end

    rule ragged_left
      '        ' content:inline
      {
        def build
          { :type => :ragged_left, :content => content.build }
        end
      }
    end

    rule indented
      '  ' content:inline
      {
        def build
          { :type => :indented, :content => content.build }
        end
      }
    end

    rule flush
      !' ' content:inline
      {
        def build
          { :type => :flush, :content => content.build }
        end
      }
    end

    rule footnote
      '^' marker:[0-9*â€ â€¡]+ ' '+ first_content:inline block_end
      additional:('^' ' '+ content:inline block_end)*
      {
        def build
          {
            :type => :footnote,
            :marker => marker.text_value,
            :content => [
              { :type => :indented, :content => first_content.build }
            ] + additional.elements.map { |e|
              { :type => :indented, :content => e.content.build }
            }
          }
        end
      }
    end

    rule quote
      (elem:(indented_rule / indented_quote / flush_quote) block_end)+
      {
        def build
          {
            :type => :quote,
            :content => elements.map {|e| e.elem.build }
          }
        end
      }
    end

    rule indented_rule
      '    * * *' "\n"
      {
        def build
          { :type => :rule }
        end
      }
    end

    rule flush_quote
      '    ' content:inline
      {
        def build
          { :type => :flush, :content => content.build }
        end
      }
    end
    
    rule indented_quote
      '      ' content:inline
      {
        def build
          { :type => :indented, :content => content.build }
        end
      }
    end
  end
end
